name: build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, osx-latest, windows-latest]
        configuration: [Release, Debug]
        include:
          - shell: msys2 {0}
            os: windows-latest
          - shell: bash
            os: ubuntu-latest
          - shell: bash
            os: osx-latest
    env:
      BUILD_TYPE: ${{ matrix.configuration }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
    - uses: msys2/setup-msys2@v2
      name: Setup MSYS2
      if: matrix.os == 'windows-latest'
      with:
        update: false
        release: false
        install: >-
          base-devel
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-opencl-headers
          mingw-w64-x86_64-opencl-icd-git
    - name: Install APT packages
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y cmake opencl-headers ocl-icd-opencl-dev
    - uses: actions/checkout@v2
    - name: Create Build Environment
      run: mkdir build
    - name: Build
      run: |
        cd build
        CMAKE_ARGS="-DCMAKE_BUILD_TYPE=$BUILD_TYPE"
        if [[ `uname` == "MSYS"* ]]; then CMAKE_ARGS="$CMAKE_ARGS -GMSYS Makefiles"; fi
        uname
        cmake .. $CMAKE_ARGS
        make
