name: build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        configuration: [Release, Debug]
    env:
      BUILD_TYPE: ${{ matrix.configuration }}
    steps:
      - uses: actions/checkout@v2
      - name: Download OpenCL Library
        if: matrix.os == 'windows-latest'
        uses: actions/checkout@v2
        with:
          name: intel/clGPU
      - name: Setup Developer Command Prompt for MSVC
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
      - name: Install APT packages
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y cmake opencl-headers ocl-icd-opencl-dev
      - name: Create Build Environment
        run: mkdir build
      - name: Build (Linux or macOS)
        if: matrix.os != 'windows-latest'
        run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE && make
        working-directory: build
      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -G"NMake Makefiles" \
             -DOpenCL_INCLUDE_DIR="../clGPU/common/intel_ocl_icd/windows/include" \
             -DOpenCL_LIBRARY="../clGPU/common/intel_ocl_icd/windows/Release/lib/x64/OpenCL.lib" \
             && nmake
        working-directory: build
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2.2.1
        with:
          name: Cas-OFFinder Binary (${{ matrix.os }}, ${{ matrix.configuration }})
          path: build/cas-offinder*
